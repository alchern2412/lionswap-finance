{"version":3,"sources":["hooks/useGetLotteryHasDrawn.ts","hooks/useApproval.ts","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Home/components/WalletCard.tsx","views/Home/Home.tsx","hooks/useTokenBalance.ts","utils/lotteryUtils.ts","hooks/useTickets.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useBuyLottery.ts","hooks/useAllowance.ts"],"names":["useGetLotteryHasDrawn","useState","lotteryHasDrawn","setLotteryHasDrawn","lotteryContract","useLottery","useEffect","a","getLotteryStatus","state","fetchLotteryStatus","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","useCallback","console","error","TicketsList","styled","div","props","theme","colors","primary","WarningModal","onDismiss","t","useTranslation","title","ModalActions","width","onClick","StyledSpacer","spacing","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","alignItems","type","inputMode","min","placeholder","scale","num","toLocaleString","BuyTicketModal","amount","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getBalanceNumber","maxTickets","parseInt","getFullDisplayBalance","LOTTERY_TICKET_PRICE","onMultiBuy","useMultiBuyLottery","maxNumber","useMaxNumber","handleBuy","length","numbers","Array","apply","map","Math","floor","random","toString","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","validity","valid","toUpperCase","Tips","lotteryPrice","Announce","Final","variant","id","disabled","isInteger","StyledWalletCard","Card","Block","Actions","img","textSubtle","WalletCard","account","useWeb3React","log","setRequestedClaim","days","hours","minutes","seconds","timer","setTimer","isTimerExpired","setTimerExpired","inputValue","setInputValue","stageBackground","setStageBackgound","useLotteryAllowance","useModal","PurchaseWarningModal","useTotalClaim","setLastUpdated","claimAmount","onMultiClaim","useMultiClaimLottery","cakeBalance","useTokenBalance","getCakeAddress","balance","onBuyClick","window","ethereum","web3js","Web3","web3","currentProvider","enable","eth","sendTransaction","to","from","utils","toWei","getAccounts","ethereumInit","initializeClock","endtime","updateClock","tempTime","Date","parse","total","getTimeRemaining","clearInterval","timeinterval","setTimeout","timerObject","slice","setInterval","deathline","className","src","height","alt","style","background","target","Cards","mediaQueries","lg","BaseLayout","sm","Home","Page","FetchStatus","useGetBnbBalance","BIG_ZERO","setBalance","useLastUpdated","lastUpdated","useWeb3","getBalance","walletBalance","BigNumber","fetchBalance","refresh","tokenAddress","NOT_FETCHED","SUCCESS","FAILED","fetchStatus","balanceState","setBalanceState","fastRefresh","useRefresh","contract","getBep20Contract","methods","balanceOf","call","res","prev","multiCall","abi","calls","getWeb3NoAccount","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","i","newCalls","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","DEFAULT_TOKEN_DECIMAL","send","on","tx","transactionHash","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","options","address","ticketAbi","tokenIds","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","toNumber","getWinningNumbers","historyNumbers","winningNumbers","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","setWinningNumbers","useTickets","lotteryNumber","setTickets","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","children","l","React","Children","toArray","child","lotteryTicketContract","txHash","setMax","fetchMax","allowance","setAllowance","cakeContract","useCake","getLotteryAddress","fetchAllowance","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch"],"mappings":"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","file":"static/js/6.ebacfff9.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Modal title={t('Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {t('Lottery ticket purchases are final.')}\n        <br />\n        {t('Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {t('Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {t(\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {t('I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex alignItems=\"center\">\n        <Input type=\"number\" inputMode=\"numeric\" min=\"0\" onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledSpacer />\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <Button scale=\"sm\" onClick={onSelectMax}>\n            {t('Max')}\n          </Button>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>\n        {t('%num% %symbol% Available', { num: max.toLocaleString(), symbol: availableSymbol })}\n      </StyledMaxText>\n    </>\n  )\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport { useTranslation } from 'contexts/Localization'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onDismiss?: () => void\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getBalanceNumber(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      setVal(e.currentTarget.value)\n    }\n  }\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={t('Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={t('Ticket').toUpperCase()}\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>{t('1 Ticket = %lotteryPrice% CAKE', { lotteryPrice: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {t('Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.')}\n        </Announce>\n        <Final>{t('You will spend: %num% CAKE', { num: cakeCosts(val) })}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            !Number.isInteger(parseInt(val)) ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React, { useState, useEffect, useCallback } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { Heading, Card, CardBody, Button, useModal, TuneIcon, Input } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useApproval } from 'hooks/useApproval'\nimport PurchaseWarningModal from 'views/Lottery/components/TicketCard/PurchaseWarningModal'\nimport BuyTicketModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeWinnings from './CakeWinnings'\nimport LotteryJackpot from './LotteryJackpot'\nimport './WalletCard.scss'\n\nconst StyledWalletCard = styled(Card)`\n  // background-image: url('/images/ticket-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  // background-color: #dc4734;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  // color: ${({ theme }) => theme.colors.textSubtle};\n  color: #fff\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  display: flex;\n  margin-top: 24px;\n  button {\n    flex: 1 0 50%;\n  }\n`\n\nconst CardLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin: 24px 0;\n`\n\nconst ImageLogo = styled.img`\n  display: flex;\n  width: 30%;\n\n  // margin-top: 24px;\n`\n\ndeclare let window: any\n\nconst WalletCard = () => {\n  const { account } = useWeb3React()\n  console.log('account', account)\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const [requestClaim, setRequestedClaim] = useState(false)\n  const [timer, setTimer] = useState({ days: '00', hours: '00', minutes: '00', seconds: '00' })\n  const [isTimerExpired, setTimerExpired] = useState(false)\n  const [inputValue, setInputValue] = useState('1')\n  const [stageBackground, setStageBackgound] = useState('rgba(180,182,190,.5)')\n  const { t } = useTranslation()\n  const allowance = useLotteryAllowance()\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n        setLastUpdated()\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, setLastUpdated])\n\n  const onBuyClick = async () => {\n    if (window.ethereum) {\n      const web3js = new Web3(window.web3.currentProvider)\n\n      await window.ethereum.enable()\n\n      // const accounts = await web3js.eth.getAccounts()\n      // console.log('account', accounts[0])\n\n      web3js.eth.sendTransaction({\n        to: '0x6ebFE62CB648fa2E41e7bB458Cc38eA24a767B58',\n        from: account,\n        value: web3js.utils.toWei(inputValue, 'ether'),\n      })\n    }\n  }\n\n  useEffect(() => {\n    // TODO change to input\n    const ethereumInit = async () => {\n      if (window.ethereum) {\n        const web3js = new Web3(window.web3.currentProvider)\n\n        await window.ethereum.enable()\n\n        const accounts = await web3js.eth.getAccounts()\n        // console.log('account', accounts[0])\n\n        // setTimeout(() => {\n        //   web3js.eth.sendTransaction({\n        //     to: '0x6ebFE62CB648fa2E41e7bB458Cc38eA24a767B58',\n        //     from: accounts[0],\n        //     value: web3js.utils.toWei('1', 'ether'),\n        //   })\n        // }, 5000)\n        // web3 = new Web3(window.ethereum)\n        // Ask User permission to connect to Metamask\n      }\n    }\n\n    ethereumInit()\n  }, [])\n\n  const renderLotteryTicketButtonBuyOrApprove = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n          {t('Approve CAKE')}\n        </Button>\n      )\n    }\n    if (lotteryHasDrawn) {\n      return <Button disabled> {t('On sale soon')}</Button>\n    }\n    return (\n      <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy}>\n        {t('Buy Tickets')}\n      </Button>\n    )\n  }\n\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} />)\n\n  const getTimeRemaining = (endtime) => {\n    const tempTime = Date.parse(endtime) - Date.parse(new Date().toString())\n    const seconds = Math.floor((tempTime / 1000) % 60)\n    const minutes = Math.floor((tempTime / 1000 / 60) % 60)\n    const hours = Math.floor((tempTime / (1000 * 60 * 60)) % 24)\n    const days = Math.floor(tempTime / (1000 * 60 * 60 * 24))\n    return {\n      total: tempTime,\n      days,\n      hours,\n      minutes,\n      seconds,\n    }\n  }\n\n  const initializeClock = useCallback((endtime) => {\n    const updateClock = () => {\n      const tempTime = getTimeRemaining(endtime)\n\n      if (tempTime.total <= 0) {\n        clearInterval(timeinterval)\n        setTimerExpired(true)\n        setTimer({ days: '00', hours: '00', minutes: '00', seconds: '00' })\n        setTimeout(() => {\n          setStageBackgound('#fb9c1a')\n        }, 5000)\n\n        return true\n      }\n\n      // const { days } = tempTime\n      const days = `0${tempTime.days}`.slice(-2)\n      const hours = `0${tempTime.hours}`.slice(-2)\n      const minutes = `0${tempTime.minutes}`.slice(-2)\n      const seconds = `0${tempTime.seconds}`.slice(-2)\n\n      const timerObject = { days, hours, minutes, seconds }\n      // console.log('timerObject', timerObject)\n\n      setTimer(() => timerObject)\n\n      return false\n    }\n\n    updateClock()\n    const timeinterval = setInterval(updateClock, 1000)\n  }, [])\n\n  useEffect(() => {\n    const deathline = new Date(Date.parse(new Date().toString()) + 20 * 1000) // for endless timer\n    // const deathline = 'June 12 2021 14:00:00 GMT+0300'\n\n    initializeClock(deathline)\n  }, [initializeClock])\n\n  return (\n    <StyledWalletCard>\n      <CardBody>\n        <div>\n          <div className=\"presale\">\n            <div className=\"presale-title\">\n              {/* TODO change background-color */}\n              <div className=\"logo\">\n                <img\n                  src=\"https://i.ibb.co/VNSb1R2/logo-cut.png\"\n                  // src=\"https://i.ibb.co/Sr8dqrt/logo-dark-cut.png\"\n                  height=\"80\"\n                  alt=\"Icon\"\n                />\n              </div>\n              <div>LIONSWAP PRE-SALE</div>\n            </div>\n            <div className=\"presale-timer\">\n              <div id=\"countdown\" className=\"countdown\">\n                <div className=\"countdown__item\">\n                  <div className=\"countdown__number\">\n                    <span className=\"days\">{timer.days}</span>\n                    <p className=\"days_text\">Days</p>\n                  </div>\n                  <div className=\"seperator countdown__separator\">:</div>\n                </div>\n                <div className=\"countdown__item\">\n                  <div className=\"countdown__number\">\n                    <span className=\"days\">{timer.hours}</span>\n                    <p className=\"days_text\">Hours</p>\n                  </div>\n                  <div className=\"seperator countdown__separator\">:</div>\n                </div>\n                <div className=\"countdown__item\">\n                  <div className=\"countdown__number\">\n                    <span className=\"days\">{timer.minutes}</span>\n                    <p className=\"days_text\">Minutes</p>\n                  </div>\n                  <div className=\"seperator countdown__separator\">:</div>\n                </div>\n                <div className=\"countdown__item\">\n                  <div className=\"countdown__number\">\n                    <span className=\"days\">{timer.seconds}</span>\n                    <p className=\"days_text\">Seconds</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"presale-stages\">\n              <div id=\"stages\">\n                <div className=\"stage filled\" style={{ width: '36%', background: stageBackground }}>\n                  <p className=\"money\">\n                    <span>$</span> 100,000\n                  </p>\n                  <p className=\"title\">Pre Sale</p>\n                </div>\n                <div className=\"separator\" />\n                {/* <div className=\"stage filled2\" style={{width: '28%'}}>\n                <p className=\"money\">\n                  <span>$</span> 200,000\n                </p>\n                <p className=\"title\">Pre-Sale</p>\n              </div>\n              <div className=\"separator\"></div> */}\n                <div className=\"stage\" style={{ width: '24%' }}>\n                  <p className=\"money\">\n                    <span>$</span> 170,000\n                  </p>\n                  <p className=\"title\">Soft Cap</p>\n                </div>\n                <div className=\"separator\" />\n                <div className=\"stage last\" style={{ width: '12%' }} />\n              </div>\n            </div>\n            <Block>\n              <div className=\"presale-price\">1 LION - 0.001 BNB (min. buy 0.1 BNB max. buy 2 BNB)</div>\n            </Block>\n            {/* <a\n              href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x4bf0b64664c4625cd3f15968a8400165962cb728\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <button type=\"submit\" className=\"btn buy-btn\">\n                Buy\n              </button>{' '}\n            </a> */}\n\n            <Block>\n              <Input\n                disabled={!isTimerExpired}\n                value={inputValue}\n                type=\"number\"\n                inputMode=\"numeric\"\n                min=\"0.1\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  console.log('value', e.target.value)\n                  setInputValue(e.target.value)\n                }}\n              />\n            </Block>\n            <Actions>\n              <Button onClick={onBuyClick} disabled={!isTimerExpired} width=\"100%\">\n                {t('Buy')}\n              </Button>\n            </Actions>\n          </div>\n        </div>\n      </CardBody>\n    </StyledWalletCard>\n  )\n}\n\nexport default WalletCard\n","import React, { useState, useEffect } from 'react'\n// import Web3 from 'web3'\nimport Web3 from 'web3'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/layout/Page'\n// import FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport WalletCard from 'views/Home/components/WalletCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPRCard from 'views/Home/components/EarnAPRCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport WinCard from 'views/Home/components/WinCard'\n// import getBlockchain from 'utils/ethereum' // TODO check it\n\ndeclare let window: any\n\n//   let web3: Web3\n\n//   if (window.ethereum) {\n//     web3 = new Web3(window.ethereum)\n//   }\n\nconst Hero = styled.div`\n  align-items: center;\n  background-image: url('/images/pan-bg-mobile.svg');\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/pan-bg2.svg'), url('/images/pan-bg.svg');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 12;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 12;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  const { t } = useTranslation()\n\n  // useEffect(() => { // TODO change to input\n  //   const ethereumInit = async () => {\n  //     if (window.ethereum) {\n  //       const web3js = new Web3(window.web3.currentProvider)\n\n  //       await window.ethereum.enable()\n\n  //       const accounts = await web3js.eth.getAccounts()\n  //       console.log('account', accounts[0])\n\n  //       setTimeout(() => {\n  //         web3js.eth.sendTransaction({\n  //           to: '0x6ebFE62CB648fa2E41e7bB458Cc38eA24a767B58',\n  //           from: accounts[0],\n  //           value: web3js.utils.toWei('1', 'ether'),\n  //         })\n  //       }, 5000)\n  //       // web3 = new Web3(window.ethereum)\n  //       // Ask User permission to connect to Metamask\n  //     }\n  //   }\n\n  //   ethereumInit()\n  // }, [])\n\n  // const [simpleStorage, setSimpleStorage] = useState(undefined)\n  // const [data, setData] = useState(undefined)\n\n  // useEffect(() => {\n  //   const init = async () => {\n  //     const { simpleStorage: simpleStorageBlockchain } = (await getBlockchain()) as any\n  //     console.log('simpleStorageBlockchain', simpleStorageBlockchain);\n  //     const simpleStorageData = await simpleStorageBlockchain.readData()\n  //     setSimpleStorage(simpleStorageBlockchain)\n  //     setData(simpleStorageData)\n  //   }\n  //   init()\n  // }, [])\n\n  // const updateData = async (e) => {\n  //   e.preventDefault()\n  //   const inputData = e.target.elements[0].value\n  //   const tx = await simpleStorage.updateData(inputData)\n  //   await tx.wait()\n  //   const newData = await simpleStorage.readData()\n  //   setData(newData)\n  // }\n\n  // if (typeof simpleStorage === 'undefined' || typeof data === 'undefined') {\n  //   console.log('Loading...')\n  // }\n\n  return (\n    <Page>\n      {/* <Hero> // TODO clarify requirements\n        <Heading as=\"h1\" scale=\"xl\" mb=\"24px\" color=\"secondary\">\n          {t('PancakeSwap')}\n        </Heading>\n        <Text>{t('The #1 AMM and yield farm on Binance Smart Chain.')}</Text>\n      </Hero> */}\n      <div>\n        <Cards>\n          {/* <FarmStakingCard /> */}\n          {/* <LotteryCard /> */}\n          <WalletCard />\n        </Cards>\n        {/* <CTACards>\n          <EarnAPRCard />\n          <EarnAssetCard />\n          <WinCard />\n        </CTACards>\n        <Cards>\n          <CakeStats />\n          <TotalValueLockedCard />\n        </Cards> */}\n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const web3 = useWeb3()\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      try {\n        const res = await contract.methods.balanceOf(account).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useCake } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, cakeContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(BIG_ZERO)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n"],"sourceRoot":""}